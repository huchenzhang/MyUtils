//第一行代码应用了android程序的gradle插件，作为android的应用程序，第一步是必须的
//因为plugin中提供了android编译、测试、打包等的所有task
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//这是编译文件中最大的代码块，关于android的所有特殊配置都在这里。
android {
    //编译版本sdk
    compileSdkVersion 27
    //编译工具版本sdk-tool
    buildToolsVersion '27.0.3'
    //程序默认配置，如果AndroidMainfest.xml里面定义了与这里相同的属性，会以这里为主
    defaultConfig {
        //1.作为程序唯一标示，防止同一个手机重复安装同一个应用。
        //2.作为R文件的包名，改名不会报错
        applicationId "com.example.huchenzhang.myutils"
        //最低兼容版本
        minSdkVersion 21
        //最高版本兼容
        targetSdkVersion 27
        //版本号，例如：2
        versionCode Integer.parseInt(VERSION_CODE)
        //版本名字，例如：2.0.1
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //兼容svg图
        vectorDrawables.useSupportLibrary = true
        //适配gradle:3.0以上版本
        flavorDimensions VERSION_CODE
        //multidex
        multiDexEnabled true
        //高德相关
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86","arm64-v8a","x86_64"
        }

    }
    //打包时用的签名和密码
    signingConfigs {
        signConfig {
            storeFile file(KEY_STORE_FILE_PATH)
            storePassword KEY_STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }
    //渠道包
    productFlavors {
        common {
            manifestPlaceholders = [channel: "common"]
        }
        xiaomi {
            manifestPlaceholders = [channel: "xiaomi"]
        }
        wandoujia {
            manifestPlaceholders = [channel: "wandoujia"]
        }
    }
    //定义了编译类型，针对每一个类型我们可以有不同的编译配置，不同的编译配置对应的有不同的编译命令。
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signConfig
        }
    }
    dataBinding {
        enabled = true
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/releases"
        }
    }

    //自定义apk安装包名
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "测试-${variant.buildType.name}-v${variant.versionName}-${variant.productFlavors[0].name}-${releaseTime()}.apk".toLowerCase()
        }
    }
}

//属于gradle的依赖配置，定义了当前项目所需要的依赖的其它库
static def releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation "com.android.support:support-annotations:$supportLibVersion"
    implementation "com.android.support:percent:$supportLibVersion"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibVersion"
    implementation "com.android.support:gridlayout-v7:$supportLibVersion"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta6'
    testImplementation 'junit:junit:4.12'

    //数据库相关
    implementation 'org.litepal.android:core:2.0.0'

    //上拉下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.3'

    //异步RxJava2
    implementation 'io.reactivex.rxjava2:rxjava:2.0.5'

    //RxJava2 Android
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //RxJava2 Adapter
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    //异步
    implementation 'com.parse.bolts:bolts-android:1.4.0'

    //网络okHttp3
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation 'com.squareup.okio:okio:1.13.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.0.0'

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //阿里云Sophix热修复
    implementation 'com.aliyun.ams:alicloud-android-hotfix:3.1.6'

    //gson
    implementation 'com.google.code.gson:gson:2.8.0'

    //picasso图片处理
    implementation 'com.squareup.picasso:picasso:2.5.2'

    //权限管理
    implementation 'com.yanzhenjie:permission:2.0.0-rc3'

    //zxing扫二维码
    implementation 'com.github.yuzhiqiang1993:zxing:2.1.4'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'

    //multidex
    implementation 'com.android.support:multidex:1.0.3'
}